trigger:
  branches:
    include:
    - main
  paths:
    include:
    - itabank.SDK/*
    - itabank.SDK.Tests/*
    - itabank.Shared/*

variables:
  majorVersion: 1
  minorVersion: 0
  patchVersion: 0
  buildConfiguration: 'Release'
  packageFeedIdentifier: '286ad473-3155-4c2d-a692-00bc7c74bdbb/d45a0b00-2205-43e8-a33e-1acfec305dc1'
  pipelineArtifact: 'artifact'
  projectName: 'itabank.SDK'

stages:
- stage: Build
  displayName: 'Build'
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(projectName)/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: 'test'
        projects: '$(projectName).Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'Pack'
      inputs:
        command: 'pack'
        packagesToPack: '$(projectName)/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        nobuild: true
        versioningScheme: 'byPrereleaseNumber'
        majorVersion: '$(majorVersion)'
        minorVersion: '$(minorVersion)'
        patchVersion: '$(patchVersion)'
    - task: PublishPipelineArtifact@1
      displayName: 'Publish'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: '$(pipelineArtifact)'

- stage: Publish
  displayName: 'Publish'
  dependsOn: Build
  condition: succeeded()
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: Publish
    displayName: 'Publish'
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download'
      inputs:
        artifact: '$(pipelineArtifact)'
        path: '$(Pipeline.Workspace)/$(pipelineArtifact)'
    - task: DotNetCoreCLI@2
      displayName: 'Push'
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/$(pipelineArtifact)/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '$(packageFeedIdentifier)'